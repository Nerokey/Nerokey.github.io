<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nerokey&#39;s Blog</title>
  
  <subtitle>个人博客，此将记录我学习的点滴。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.nerokey.iofo/"/>
  <updated>2017-11-08T14:50:17.856Z</updated>
  <id>http://www.nerokey.iofo/</id>
  
  <author>
    <name>Nerokey</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java中的集合之Set</title>
    <link href="http://www.nerokey.iofo/2017/11/09/Java%E4%B8%AD%E7%9A%84%E9%9B%86%E5%90%88%E4%B9%8BSet/"/>
    <id>http://www.nerokey.iofo/2017/11/09/Java中的集合之Set/</id>
    <published>2017-11-08T23:46:40.000Z</published>
    <updated>2017-11-08T14:50:17.856Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Java" scheme="http://www.nerokey.iofo/categories/Java/"/>
    
    
      <category term="集合" scheme="http://www.nerokey.iofo/tags/%E9%9B%86%E5%90%88/"/>
    
      <category term="Set" scheme="http://www.nerokey.iofo/tags/Set/"/>
    
  </entry>
  
  <entry>
    <title>Java中的集合之List</title>
    <link href="http://www.nerokey.iofo/2017/11/08/Java%E4%B8%AD%E7%9A%84%E9%9B%86%E5%90%88%E4%B9%8BList/"/>
    <id>http://www.nerokey.iofo/2017/11/08/Java中的集合之List/</id>
    <published>2017-11-08T09:42:19.000Z</published>
    <updated>2017-11-08T14:38:27.622Z</updated>
    
    <content type="html"><![CDATA[<p>java中<strong>list</strong>是一个接口，已实现的类有ArrayList、LinkedList等。</p><blockquote><p><strong>List的特点：</strong><br>1 . List：序列<br>2 . 有序的，可重复<br>3 . ArrayList：<br>4 . LinkedList：离散</p></blockquote><a id="more"></a><hr><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a><strong>ArrayList</strong></h3><p>ArrayList就相当于一个容器，任何元素都能往里面丢。我们使用add方法向里面添加元素。<br>他的特点就是：<br>1 . 离散结构<br>2 . 容量动态扩充<br>3 . 线程不安全（不同步）</p><p>下面给出了ArrayList的一些常用方法：<br>1、添加元素：我们使用add方法向里面添加元素，像这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ArrayList ls = new ArrayList();  //创建一个list对象</div><div class="line"></div><div class="line">ls.add(&quot;abcd&quot;);</div><div class="line">ls.add(111);</div><div class="line">ls.add(3.1415);</div><div class="line">ls.add(null);</div><div class="line">ls.add(false);</div><div class="line">ls.add(&quot;abcd&quot;);</div><div class="line">ls.add(new Person(&quot;abc&quot;, 20));</div><div class="line">ls.add(new Person(&quot;123bc&quot;, 18));</div></pre></td></tr></table></figure></p><p>可以看出这个容器中不仅能放int类型，double类型，boolean类型，甚至是null值也能存放、对象也能放进去。相同的元素也能放进去。<br>2、容器中的元素输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//使用迭代器输出</div><div class="line">Iterator iter = ls.iterator();</div><div class="line">while(iter.hasNext())&#123;</div><div class="line">    System.out.println(iter.next());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong><em>注意：</em></strong> ArrayList无法使用for循环输出，需要使用迭代器while循环输出，hasNext()判断是否有下一个元素，next()输出元素对象。<br>3、其他一些方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//get方法，获取index下标的对象</div><div class="line">System.out.println(ls.get(4));</div><div class="line"></div><div class="line">//size方法，获取当前ArrayList容器里面元素的个数</div><div class="line">int size = ls.size();</div><div class="line"></div><div class="line">//indexOf，获取容器中某个对象的下标索引</div><div class="line">System.out.println(ls.indexOf(111));</div><div class="line"></div><div class="line">//remove，移除指定下标的元素值</div><div class="line">ls.remove(5);</div><div class="line"></div><div class="line">//clear，清空整个容器</div><div class="line">ls.clear();</div></pre></td></tr></table></figure></p><p>此外ArrayList中还包括clone()啊之类的一些其他方法，就不一一列举了。。</p><hr><h3 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a><strong>LinkedList</strong></h3><p>他的底层是通过链表实现的，所以他不仅具有ArrayList的方法，还具有队列和栈的一些操作。<br>其特点为：<br>1 . 顺序结构<br>2 . 容量动态扩充<br>3 . 线程不安全（不同步）</p><p>这里我们就举一些和ArrayList不同的例子<br>1、添加元素和ArrayList是一样的使用add()方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">LinkedList list = new LinkedList();</div><div class="line"></div><div class="line">list.add(&quot;abcd&quot;);</div><div class="line">list.add(111);</div><div class="line">list.add(3.1415);</div><div class="line">list.add(null);</div><div class="line">list.add(true);</div><div class="line">list.add(3.1415);</div><div class="line">list.add(&quot;abcd&quot;);</div><div class="line">list.add(new Person(&quot;abc&quot;, 20));</div><div class="line">list.add(new Person(&quot;123bc&quot;, 18));</div></pre></td></tr></table></figure></p><p>这里也是允许添加相同的元素。<br>2、遍历方法：和ArrayList一样使用Iterator迭代器来遍历<br>3、其他一些常用方法：(与ArrayList不同的方法)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">//从此列表所表示的堆栈处弹出一个元素。</div><div class="line">list.pop();</div><div class="line"></div><div class="line">//在列表尾部添加一个元素</div><div class="line">list.addLast(&quot;ABC&quot;);</div><div class="line"></div><div class="line">//在列表头部添加一个元素</div><div class="line">list.addFirst(&quot;China&quot;);</div><div class="line"></div><div class="line">//获取列表最后一个元素</div><div class="line">list.getLast();</div><div class="line"></div><div class="line">//获取列表第一个元素</div><div class="line">list.getFirst();</div><div class="line"></div><div class="line">//获取但不移除此列表的头（第一个元素）。</div><div class="line">list.peek();</div><div class="line"></div><div class="line">//将元素推入此列表所表示的堆栈。</div><div class="line">list.push(100);</div></pre></td></tr></table></figure></p><p><strong><em>注意：</em></strong> pop()和peek()还有getFirst()都能获取列表的第一个元素，但是pop()是会将元素删除，其他两个方法都不会将其删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java中&lt;strong&gt;list&lt;/strong&gt;是一个接口，已实现的类有ArrayList、LinkedList等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;List的特点：&lt;/strong&gt;&lt;br&gt;1 . List：序列&lt;br&gt;2 . 有序的，可重复&lt;br&gt;3 . ArrayList：&lt;br&gt;4 . LinkedList：离散&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nerokey.iofo/categories/Java/"/>
    
    
      <category term="java" scheme="http://www.nerokey.iofo/tags/java/"/>
    
      <category term="集合" scheme="http://www.nerokey.iofo/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Win10+Ubuntu16.04双系统安装</title>
    <link href="http://www.nerokey.iofo/2017/10/24/Win10-Ubuntu16-04%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>http://www.nerokey.iofo/2017/10/24/Win10-Ubuntu16-04双系统安装/</id>
    <published>2017-10-23T23:14:49.000Z</published>
    <updated>2017-10-24T02:18:27.915Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、今天我们来看看uefi+gpt下Win10+Ubuntu16.04双系统如何安装。</strong><br>首先附上我的引导界面<br><img src="http://oxua0flmy.bkt.clouddn.com/hexo/20171024100037.png" alt=""><br><a id="more"></a><br><br><br><em>我的安装条件：</em></p><blockquote><p>　1. win10笔记本一台<br>　      SSD+机械盘<br> 　2. U盘一个（大于4G）<br> 　3. Ubuntu16.04的iso镜像</p></blockquote><p>个人是有2块硬盘的，其中SSD安装的是win10；使用了机械的80G用于安装Ubuntu，剩下的用来做数据盘。引导也是放在固态盘中的，这样启动会快上一些。<br>当然，如果你只有一块硬盘应该也是一样的。<br><br><br><strong>2、然后是安装过程：</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1、今天我们来看看uefi+gpt下Win10+Ubuntu16.04双系统如何安装。&lt;/strong&gt;&lt;br&gt;首先附上我的引导界面&lt;br&gt;&lt;img src=&quot;http://oxua0flmy.bkt.clouddn.com/hexo/20171024100037.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux系统" scheme="http://www.nerokey.iofo/categories/Linux%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://www.nerokey.iofo/tags/Linux/"/>
    
      <category term="系统安装" scheme="http://www.nerokey.iofo/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>javascript中的前端表单验证</title>
    <link href="http://www.nerokey.iofo/2017/10/23/javascript%E4%B8%AD%E7%9A%84%E5%89%8D%E7%AB%AF%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    <id>http://www.nerokey.iofo/2017/10/23/javascript中的前端表单验证/</id>
    <published>2017-10-23T13:58:34.000Z</published>
    <updated>2017-10-23T23:06:51.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。"><a href="#在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。" class="headerlink" title="在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。"></a>在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。</h2><p><br><br><strong>大致有两种写法可以实现：</strong><br><a id="more"></a></p><blockquote><ul><li><p>1、在按钮的check事件中进行验证，验证通过后使用form.submit()发送验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">&lt;title&gt;表单验证&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;form name=&quot;myform&quot; action=&quot;do.php&quot; method=&quot;POST&quot;&gt;</div><div class="line">&lt;label for=&quot;username&quot;&gt;</div><div class="line">&lt;p&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;/label&gt;</div><div class="line">&lt;label for=&quot;psword&quot;&gt;</div><div class="line">&lt;p&gt;密码：&lt;input type=&quot;password&quot; name=&quot;psword&quot; id=&quot;psword&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;/label&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;登录&quot; onclick=&quot;check()&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function check()&#123;</div><div class="line">with(document.myform)&#123;</div><div class="line">if(username.value.length==0)&#123;    // if(username.value==&quot;&quot;)</div><div class="line">alert(&apos;用户名必须输入！&apos;);</div><div class="line">username.focus();</div><div class="line">&#125;</div><div class="line">else if(psword.value.length==0)&#123;</div><div class="line">alert(&apos;密码不能为空&apos;);</div><div class="line">psword.focus();</div><div class="line">&#125;</div><div class="line">else</div><div class="line">myform.submit();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></li><li><p>2、在表单的onsubmit表单中进行验证</p></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">&lt;title&gt;表单验证&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;form name=&quot;myform&quot; action=&quot;do.php&quot; method=&quot;POST&quot; onsubmit=&quot;return checkdata()&quot;&gt;</div><div class="line">&lt;label for=&quot;username&quot;&gt;</div><div class="line">&lt;p&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;/label&gt;</div><div class="line">&lt;label for=&quot;password&quot;&gt;</div><div class="line">&lt;p&gt;密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;/label&gt;</div><div class="line">&lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function checkdata()&#123;</div><div class="line">with(document.myform)&#123;</div><div class="line">if(username.value==&quot;&quot; || password.vlaue==&quot;&quot;)&#123;</div><div class="line">alert(&apos;用户名或密码不能为空！&apos;);</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">else&#123;</div><div class="line">return true;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p><strong>常用的其他验证：</strong></p><blockquote><p>1、必填字段验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//if(value==null||value==&quot;&quot;)</div><div class="line"> if(value.length==0)&#123;</div><div class="line">    alert(&apos;必须输入&apos;)；</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p></blockquote><p><br></p><blockquote><p>2、长度验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if(value.length&gt;50)&#123;</div><div class="line">    alert(&apos;不能超过50个字符&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><p><br></p><blockquote><p>3、只能输入数字验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function  isNumber(String)&#123; </div><div class="line">    var  Letters  =  &quot;1234567890&quot;;  //可以自己增加可输入值</div><div class="line">    var  i;</div><div class="line">    var  c;</div><div class="line">    for(  i  =  0;  i  &lt;  String.length;  i++)&#123; </div><div class="line">        c  =  String.charAt(  i  );</div><div class="line">        if  (Letters.indexOf(  c  )  &lt;  0)</div><div class="line">        return  false;</div><div class="line">    &#125;</div><div class="line">    return  true;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><p><br></p><blockquote><p>4、邮箱验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function isEmail(value)&#123;</div><div class="line">    apos=value.indexOf(&quot;@&quot;)</div><div class="line">    dotpos=value.lastIndexOf(&quot;.&quot;)</div><div class="line">    if (apos&lt;1||dotpos-apos&lt;2) &#123;</div><div class="line">        return false&#125;</div><div class="line">    else &#123;return true&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><hr><p>以上是前端各种验证的关键部分，具体扩充看具体需求了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。&quot;&gt;&lt;a href=&quot;#在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。&quot; class=&quot;headerlink&quot; title=&quot;在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。&quot;&gt;&lt;/a&gt;在Web中最常见的就是表单验证了，因为现在基本上各大网站都要求登入账号，这时候验证账号和密码的准确性就需要用到表单验证。当然通常情况下都会前端后端都需要进行验证，因为单一前端验证容易出现漏洞；而只进行后端验证则会加大对服务器的压力。所以就有了前端验证格式正确与否，而后端验证账号密码匹配与否。&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;大致有两种写法可以实现：&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.nerokey.iofo/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://www.nerokey.iofo/tags/javascript/"/>
    
      <category term="前端" scheme="http://www.nerokey.iofo/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java中不借助中间变量交换两数的值</title>
    <link href="http://www.nerokey.iofo/2017/10/22/Java%E4%B8%AD%E4%B8%8D%E5%80%9F%E5%8A%A9%E4%B8%AD%E9%97%B4%E5%8F%98%E9%87%8F%E4%BA%A4%E6%8D%A2%E4%B8%A4%E6%95%B0%E7%9A%84%E5%80%BC/"/>
    <id>http://www.nerokey.iofo/2017/10/22/Java中不借助中间变量交换两数的值/</id>
    <published>2017-10-22T09:02:42.000Z</published>
    <updated>2017-11-08T14:48:01.547Z</updated>
    
    <content type="html"><![CDATA[<p>交换数值我们一般借助一个中间变量，这样会变得简单明了。然而在面试的时候很多面试官就喜欢这样来问你，这时候如果你回答出来了就能显得你稍稍厉害一些。</p><h2 id="今天我们就来看看Java中是如何不借助第三个变量来交换数值的"><a href="#今天我们就来看看Java中是如何不借助第三个变量来交换数值的" class="headerlink" title="今天我们就来看看Java中是如何不借助第三个变量来交换数值的"></a>今天我们就来看看Java中是如何不借助第三个变量来交换数值的</h2><p><br><br>再此之前我们先看下借助第三个变量来交换法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">public class Exchange1 &#123;</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line">int x = 10;</div><div class="line">int y = 18;</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">System.out.println(&quot;---------交换后------------&quot;);</div><div class="line">int temp;</div><div class="line">temp = x;</div><div class="line">x = y;</div><div class="line">y = temp;</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><a id="more"></a><p>结果为：<br><img src="http://oxua0flmy.bkt.clouddn.com/hexo/20171022171805.png" alt=""><br><br><br>方法有两种：其一是通过数学方法，对这两个数进行某些数学运算；其二是通过位运算。</p><blockquote><p>　１．数学运算法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public class Exchange2 &#123;</div><div class="line">public static void main(String[] args) &#123;</div><div class="line">int x = 7;</div><div class="line">int y = 4;</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">x = x+y;   //x=11</div><div class="line">y = x-y;   //y=7</div><div class="line">x = x-y;   //x=4</div><div class="line">System.out.println(&quot;--------交换后--------&quot;);</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>结果为：<br><img src="http://oxua0flmy.bkt.clouddn.com/hexo/20171022172508.png" alt=""><br><br></p><blockquote><p>2．位运算法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public class Exchange3 &#123;</div><div class="line">public static void main(String[] args) &#123;</div><div class="line">int x = 16;</div><div class="line">int y = 21;</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">x = x^y;</div><div class="line">y = y^x;</div><div class="line">x = y^x;</div><div class="line">System.out.println(&quot;--------交换后--------&quot;);</div><div class="line">System.out.println(&quot;x=&quot;+x+&quot;,y=&quot;+y);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>结果为：<br><img src="http://oxua0flmy.bkt.clouddn.com/20171022175355.png" alt=""><br>这里我们用到的位运算是异或运算。不明白的同学可以将两个数化成二进制一步一步算一下就能明白了。<br><br></p><blockquote><p>好了，这就是java中不借助第三个变量来实现两个数的数值互换的两种基本方法，<br>可能还有更高级的方法，就不一一列举了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;交换数值我们一般借助一个中间变量，这样会变得简单明了。然而在面试的时候很多面试官就喜欢这样来问你，这时候如果你回答出来了就能显得你稍稍厉害一些。&lt;/p&gt;
&lt;h2 id=&quot;今天我们就来看看Java中是如何不借助第三个变量来交换数值的&quot;&gt;&lt;a href=&quot;#今天我们就来看看Java中是如何不借助第三个变量来交换数值的&quot; class=&quot;headerlink&quot; title=&quot;今天我们就来看看Java中是如何不借助第三个变量来交换数值的&quot;&gt;&lt;/a&gt;今天我们就来看看Java中是如何不借助第三个变量来交换数值的&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;再此之前我们先看下借助第三个变量来交换法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public class Exchange1 &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public static void main(String[] args) &amp;#123;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		int x = 10;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		int y = 18;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(&amp;quot;x=&amp;quot;+x+&amp;quot;,y=&amp;quot;+y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(&amp;quot;---------交换后------------&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		int temp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		temp = x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		x = y;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		y = temp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(&amp;quot;x=&amp;quot;+x+&amp;quot;,y=&amp;quot;+y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nerokey.iofo/categories/Java/"/>
    
    
      <category term="java" scheme="http://www.nerokey.iofo/tags/java/"/>
    
      <category term="算法" scheme="http://www.nerokey.iofo/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>一般网站导航栏的写法</title>
    <link href="http://www.nerokey.iofo/2017/10/21/%E4%B8%80%E8%88%AC%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E5%86%99%E6%B3%95/"/>
    <id>http://www.nerokey.iofo/2017/10/21/一般网站导航栏的写法/</id>
    <published>2017-10-21T07:46:57.000Z</published>
    <updated>2017-10-22T09:35:06.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天我们用html-css实现一些网站导航栏效果"><a href="#今天我们用html-css实现一些网站导航栏效果" class="headerlink" title="今天我们用html+css实现一些网站导航栏效果"></a>今天我们用html+css实现一些网站导航栏效果</h1><hr><p> 很多网站的导航页面都是具有鼠标放上就展开下拉内容这个功能<br> 比如说下面这个网站：<br><img src="http://oxua0flmy.bkt.clouddn.com/20171021155103.png" alt="网站实例"></p><a id="more"></a><h2 id="1、我们首先用两个盒子来说明下原理"><a href="#1、我们首先用两个盒子来说明下原理" class="headerlink" title="1、我们首先用两个盒子来说明下原理"></a>1、我们首先用两个盒子来说明下原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">&lt;title&gt;Document&lt;/title&gt;</div><div class="line">&lt;style&gt;</div><div class="line">.box&#123;</div><div class="line">height: 30px;</div><div class="line">width: 60px;</div><div class="line">background-color: #ccc;</div><div class="line">&#125;</div><div class="line">.show&#123;</div><div class="line">display: none;</div><div class="line">height: 50px;</div><div class="line">width: 100px;</div><div class="line">background-color: #fcc;</div><div class="line">&#125;</div><div class="line">.box:hover .show&#123;</div><div class="line">display: block;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div class=&quot;box&quot;&gt;盒子1</div><div class="line">&lt;div class=&quot;show&quot;&gt;盒子2&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>原本只显示盒子1，当鼠标放上去后便会展开盒子2了。<br><img src="http://oxua0flmy.bkt.clouddn.com/hexo/20171021160045.png" alt=""><br>首先html部分很简单，就是两个盒子的嵌套<br>然后看css部分：<br>➀ 我们先将盒子2设置display:none将其隐藏<br>➁<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box:hover .show&#123;</div><div class="line">    display: block;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这一段的意思就是当鼠标放在.box类上是对.show类操作。前提是.show得是.box的子集，就是包含在.box中这里我们设置的是将.show类展开，即display:block。<br>这样就实现了我们的核心功能。</p><h2 id="2、接下来我们做上面示例图中的导航页面"><a href="#2、接下来我们做上面示例图中的导航页面" class="headerlink" title="2、接下来我们做上面示例图中的导航页面"></a>2、接下来我们做上面示例图中的导航页面</h2><p>只要理解了原理，做出图例的样式其实很简单了<br>代码如下：</p><h4 id="①-首先是html代码"><a href="#①-首先是html代码" class="headerlink" title="① 首先是html代码"></a>① 首先是html代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">&lt;a href=&quot;#&quot; class=&quot;head&quot;&gt;首页&lt;/a&gt;</div><div class="line">&lt;div class=&quot;box&quot;&gt;评价任务 ▾</div><div class="line">&lt;div class=&quot;show&quot;&gt;</div><div class="line">&lt;li&gt;&lt;a href=&quot;#&quot;&gt;评价任务&lt;/a&gt;&lt;/li&gt;</div><div class="line">&lt;li&gt;&lt;a href=&quot;#&quot; class=&quot;topborder&quot;&gt;淘宝问大家&lt;/a&gt;&lt;/li&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure><p>这是body部分代码，很简单。就是写了个a标记，然后一个div里面再嵌一个div实现。</p><h4 id="②-CSS部分代码"><a href="#②-CSS部分代码" class="headerlink" title="② CSS部分代码"></a>② CSS部分代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">*&#123;margin: 0;padding: 0;&#125;</div><div class="line">body&#123;</div><div class="line">margin: 60px;</div><div class="line">&#125;</div><div class="line">.head, .box&#123;</div><div class="line">float: left;</div><div class="line">line-height: 50px;</div><div class="line">width: 200px;</div><div class="line">background-color: #4882F0;</div><div class="line">color:#fff;</div><div class="line">text-decoration: none;</div><div class="line">text-align: center;</div><div class="line">&#125;</div><div class="line">.box&#123;</div><div class="line">overflow: hidden;</div><div class="line">&#125;</div><div class="line">.show&#123;</div><div class="line">display: none;</div><div class="line">border: 1px dotted #ccc;</div><div class="line">&#125;</div><div class="line">.box:hover&#123;</div><div class="line">font-weight: bold;</div><div class="line">background-color: #3B6CCA;</div><div class="line">&#125;</div><div class="line">.head:hover&#123;</div><div class="line">font-weight: bold;</div><div class="line">background-color: #3B6CCA;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box:hover .show&#123;</div><div class="line">font-weight: normal;</div><div class="line">display: block;</div><div class="line">background-color: #fff;</div><div class="line">border-top:2px solid #F09628;</div><div class="line">&#125;</div><div class="line">.topborder&#123;</div><div class="line">border-top:1px dotted #ccc;</div><div class="line">&#125;</div><div class="line">li&#123;</div><div class="line">display: inline-block;</div><div class="line">&#125;</div><div class="line">.show a&#123;</div><div class="line">text-align:center;</div><div class="line">padding: 10px 50px;</div><div class="line">text-decoration: none;</div><div class="line">color:#000;</div><div class="line">&#125;</div><div class="line">.show a:hover&#123;</div><div class="line">color:#F09628;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure><p>结构很清晰，这样就能实现示例图的效果了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实我们只要理解前面的盒子嵌套模型，其他的就都是一样的原理，万变不离其宗。都是一个道理。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今天我们用html-css实现一些网站导航栏效果&quot;&gt;&lt;a href=&quot;#今天我们用html-css实现一些网站导航栏效果&quot; class=&quot;headerlink&quot; title=&quot;今天我们用html+css实现一些网站导航栏效果&quot;&gt;&lt;/a&gt;今天我们用html+css实现一些网站导航栏效果&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt; 很多网站的导航页面都是具有鼠标放上就展开下拉内容这个功能&lt;br&gt; 比如说下面这个网站：&lt;br&gt;&lt;img src=&quot;http://oxua0flmy.bkt.clouddn.com/20171021155103.png&quot; alt=&quot;网站实例&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.nerokey.iofo/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://www.nerokey.iofo/tags/html/"/>
    
      <category term="css" scheme="http://www.nerokey.iofo/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Markdown文件的基本书写</title>
    <link href="http://www.nerokey.iofo/2017/10/01/md%E6%96%87%E4%BB%B6%E7%9A%84%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F/"/>
    <id>http://www.nerokey.iofo/2017/10/01/md文件的书写格式/</id>
    <published>2017-10-01T00:31:01.000Z</published>
    <updated>2017-10-23T13:24:40.383Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oxua0flmy.bkt.clouddn.com/20171001115221.png" alt="首页图"></p><h3 id="1-首先推荐一个在线编辑器"><a href="#1-首先推荐一个在线编辑器" class="headerlink" title="1. 首先推荐一个在线编辑器"></a><strong>1. 首先推荐一个在线编辑器</strong></h3><blockquote><h4 id="Cmd-Markdown在线编辑器，可以实时预览到博客的样子"><a href="#Cmd-Markdown在线编辑器，可以实时预览到博客的样子" class="headerlink" title="Cmd Markdown在线编辑器，可以实时预览到博客的样子"></a>Cmd Markdown在线编辑器，可以实时预览到博客的样子</h4><h4 id="点击Markdown进入开始编写。"><a href="#点击Markdown进入开始编写。" class="headerlink" title="点击Markdown进入开始编写。"></a>点击<a href="https://www.zybuluo.com/" target="_blank" rel="external">Markdown</a>进入开始编写。</h4></blockquote><a id="more"></a><h3 id="2-Markdown的基本语法"><a href="#2-Markdown的基本语法" class="headerlink" title="2. Markdown的基本语法"></a><strong>2. Markdown的基本语法</strong></h3><p><strong>1、 标题的写法</strong><br>用#号表示标题，比如说“#一级标题”表示一级标题，相当于html中的h1。和html一样也是有6级标题的，分别用“#”，“##”，“###”，······ 以此类推表示标题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 这是一级标题</div><div class="line">## 这是二级标题</div><div class="line">### 这是三级标题</div><div class="line">#### 这是四级标题</div></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001095254.png" alt="图片实例"></p></blockquote><ul><li>或者可以这样写</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 这是一级标题 #</div><div class="line">## 这是二级标题 ##</div><div class="line">### 这是三级标题 ###</div></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001114734.png" alt="图片实例"></p></blockquote><p> 这样就相当于有了闭合标签<br>一般来说选择第一种写法，比较方便快捷；注意#和标题内容之间有空格。</p><hr><p><strong>2、 列表</strong></p><ul><li>列表分为有序列表和无序列表。<br>下面直接展示写法和效果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#### 无序列表</div><div class="line">* 1</div><div class="line">    * 1.1</div><div class="line">        * 1.1.1</div><div class="line">* 2</div><div class="line">* 3</div></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001120348.png" alt="无序列表"></p></blockquote><p>可以看到如果代码缩进就会变成次级列表，出来*号可以用来表示列表以外，还可以使用+，-来表示无序列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#### 有序列表</div><div class="line">1. 有序列表1 </div><div class="line">    1. 次级列表</div><div class="line">2. 有序列表2 </div><div class="line">3. 有序列表3</div></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001121123.png" alt="有序列表"></p></blockquote><p><strong>3、 区块引用</strong></p><ul><li><p>如果你想把某些内容放在一起或者是引用某某某的话时就可以使用引用了。<br>使用也很简单就是在你要引用话之前加一个&gt;，注意是英文箭头，还有在&gt;和话之间是需要空格的</p><p>比如这样：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; ### 这是引用</div><div class="line">&gt; * 不以结婚为目的的谈恋爱都是耍流氓</div><div class="line">&gt;     &gt; 这是毛主席说的</div><div class="line">&gt; * 前方高能</div><div class="line">&gt;     &gt; 注意：这里是为了提醒前面很刺激</div><div class="line">&gt;     &gt; 的事情要发生</div></pre></td></tr></table></figure><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001122229.png" alt="区块实例"></p><ul><li>同样引用也是可以嵌套的<br>比如这样：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; 一级引用</div><div class="line">&gt;&gt; 二级引用</div><div class="line">&gt;&gt;&gt; 三级引用</div><div class="line">&gt;&gt;&gt;&gt; 四级引用</div><div class="line">&gt;&gt;&gt;&gt;&gt; 五级引用</div></pre></td></tr></table></figure><p>效果如下：<br><img src="http://oxua0flmy.bkt.clouddn.com/20171001122548.png" alt="引用效果"><br>多级引用嵌套可以不要连在一起的，中间允许有空格，只要在一行就行</p><p><strong>4、分割线</strong><br> 分割线可以由 *，-，_这3个符号最少3个，可连续也可不连续，最少3个就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">___</div><div class="line">*   *   *</div><div class="line">***</div></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001135907.png" alt="分割线效果"></p></blockquote><ul><li>不过一般情况我们选择 ——–这个符号，因为易写，直观明了。</li></ul><p><strong>5、 链接</strong><br>链接的写法有两种：行内式和参数式，不管是哪一种，链接文字都需要用[]来标记</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">##### 行内式</div><div class="line">[行内式](https://www.baidu.com)链接的写法</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001141000.png" alt="行内式"></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#### 参数式</div><div class="line">[name]:https://www.baidu.com</div><div class="line">[主页]:https://www.baidu.com</div><div class="line"></div><div class="line">这里是 [name]，这里是[主页]</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001141432.png" alt="参数式"></p></blockquote><ul><li>一般会这两种方法就差不多了</li></ul><p><strong>6、 图片</strong><br>图片的写法就和链接基本一样了。<br>这里就直接给出写法，很容易理解的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#### 图片的写法</div><div class="line">这里放图片![我是图片](http://i4.bvimg.com/524586/602c9d1be6eecc97s.png)</div></pre></td></tr></table></figure><p>显示效果：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001142450.png" alt="图片"></p></blockquote><ul><li>图片的写法和链接几乎一样只是前面多了一个!用来表示图片。</li></ul><p><strong>7、 代码框</strong><br>这个就很重要了，很多时候你都只是想吧自己的代码贴上去。这时候就要用到这个了。<br>如果代码只有一行，那很简单，直接用`引起来就好了。<br>如果代码是多行的话，就需要用```表示开始，同样用三个点表示结束，代码写在中间<br>像这样</p><p>代码的写法：<br><img src="http://oxua0flmy.bkt.clouddn.com/20171016221312.png" alt="代码的写法"></p><p>显示效果：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001164549.png" alt="代码显示"></p></blockquote><p><strong>8、 表格</strong><br>这个写起来有点麻烦，其实有点像你就是在用符号画表格。<br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#### 表格</div><div class="line">| name | age | sex |</div><div class="line">|:----:|:---:|:---:|</div><div class="line">| Tom  | 28  |  男 |</div><div class="line">| Jany | 23  |  女 |</div><div class="line">| Lucy | 26  |  女 |</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001165220.png" alt="表格图1"></p></blockquote><p>或者这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#### 表格</div><div class="line"> 姓名|语文|数学|英语</div><div class="line"> -|-|-|-</div><div class="line"> Tom|80|70|84</div><div class="line"> Jane|90|88|92</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001165849.png" alt="表格图2"></p></blockquote><p><strong>9、 强调</strong><br>强调就是加粗和倾斜还有删除线，有的时候用得着。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#### 倾斜</div><div class="line">_倾斜_</div><div class="line">*倾斜*</div><div class="line">#### 加粗</div><div class="line">__加粗__</div><div class="line">**加粗**</div><div class="line">#### 删除线</div><div class="line">~~删除线~~</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001170544.png" alt="强调"></p></blockquote><p><strong>10、 转义字符</strong><br>其实就是有些符号代表了特殊意义导致无法输入，这时候就需要转义字符了。其实很简单，转义字符和js的转义字符是一样的，这里我就列几个常用的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#### 转义字符</div><div class="line">* \\</div><div class="line">* \`</div><div class="line">* \*</div><div class="line">* \-</div><div class="line">* \+</div><div class="line">* \!</div></pre></td></tr></table></figure><p>效果图：</p><blockquote><p><img src="http://oxua0flmy.bkt.clouddn.com/20171001171035.png" alt="转义字符"></p></blockquote><p><strong>编写md文件的基本语法差不多就这些了，也是从网上各处整理的。日后如果需要再进行补充。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxua0flmy.bkt.clouddn.com/20171001115221.png&quot; alt=&quot;首页图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-首先推荐一个在线编辑器&quot;&gt;&lt;a href=&quot;#1-首先推荐一个在线编辑器&quot; class=&quot;headerlink&quot; title=&quot;1. 首先推荐一个在线编辑器&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 首先推荐一个在线编辑器&lt;/strong&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;Cmd-Markdown在线编辑器，可以实时预览到博客的样子&quot;&gt;&lt;a href=&quot;#Cmd-Markdown在线编辑器，可以实时预览到博客的样子&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown在线编辑器，可以实时预览到博客的样子&quot;&gt;&lt;/a&gt;Cmd Markdown在线编辑器，可以实时预览到博客的样子&lt;/h4&gt;&lt;h4 id=&quot;点击Markdown进入开始编写。&quot;&gt;&lt;a href=&quot;#点击Markdown进入开始编写。&quot; class=&quot;headerlink&quot; title=&quot;点击Markdown进入开始编写。&quot;&gt;&lt;/a&gt;点击&lt;a href=&quot;https://www.zybuluo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt;进入开始编写。&lt;/h4&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客相关" scheme="http://www.nerokey.iofo/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="md语法" scheme="http://www.nerokey.iofo/tags/md%E8%AF%AD%E6%B3%95/"/>
    
      <category term="md书写格式" scheme="http://www.nerokey.iofo/tags/md%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
</feed>
